{"remainingRequest":"/Users/olavo/Projects/sprint-name-generator/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/olavo/Projects/sprint-name-generator/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/olavo/Projects/sprint-name-generator/node_modules/source-map-loader/index.js!/Users/olavo/Projects/sprint-name-generator/src/Generator.jsx","dependencies":[{"path":"/Users/olavo/Projects/sprint-name-generator/src/Generator.jsx","mtime":1560957632899},{"path":"/Users/olavo/Projects/sprint-name-generator/node_modules/cache-loader/dist/cjs.js","mtime":1560896519605},{"path":"/Users/olavo/Projects/sprint-name-generator/node_modules/thread-loader/dist/cjs.js","mtime":1550723257458},{"path":"/Users/olavo/Projects/sprint-name-generator/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1557794785210},{"path":"/Users/olavo/Projects/sprint-name-generator/node_modules/source-map-loader/index.js","mtime":1549466144051}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL29sYXZvL1Byb2plY3RzL3NwcmludC1uYW1lLWdlbmVyYXRvci9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9vbGF2by9Qcm9qZWN0cy9zcHJpbnQtbmFtZS1nZW5lcmF0b3Ivbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9Vc2Vycy9vbGF2by9Qcm9qZWN0cy9zcHJpbnQtbmFtZS1nZW5lcmF0b3Ivc3JjL0dlbmVyYXRvci5qc3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBub3VucyBmcm9tICcuL25vdW5zJzsKaW1wb3J0IGFkamVjdGl2ZXMgZnJvbSAnLi9hZGplY3RpdmVzJzsKCnZhciByYW5kb20gPSBmdW5jdGlvbiByYW5kb20oYXJyKSB7CiAgcmV0dXJuIGFycltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhcnIubGVuZ3RoKV07Cn07Cgp2YXIgX2RlZmF1bHQgPSBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoewogICAgdGl0bGU6ICcnLAogICAgbmFtZXM6ICdGZWxpcGUsIEdlbmV2YSwgSGltYW5zaGksIEphbWllLCBPbGF2bywgVGh5YWdvLCBKb3JkYW4sIFJvYiwgRGFuaWVsLCBUZWVuYSwgS2VpdGgsIEplYW4nCiAgfSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBzdGF0ZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldFN0YXRlID0gX3VzZVN0YXRlMlsxXTsKCiAgdmFyIGdlbmVyYXRlID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgewogICAgdmFyIG5vdW4gPSByYW5kb20obm91bnMpOwogICAgdmFyIGFkamVjdGl2ZSA9IHJhbmRvbShhZGplY3RpdmVzKTsKICAgIHZhciBuYW1lID0gcmFuZG9tKHN0YXRlLm5hbWVzLnJlcGxhY2UoJywgJywgJywnKS5zcGxpdCgnLCcpKTsKICAgIHNldFN0YXRlKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgIHRpdGxlOiAiIi5jb25jYXQoQm9vbGVhbihuYW1lKSA/ICIiLmNvbmNhdChuYW1lLCAiJ3MgIikgOiAnJykuY29uY2F0KGFkamVjdGl2ZSwgIiAiKS5jb25jYXQobm91bikKICAgIH0pKTsKICB9LCBbc3RhdGUsIHNldFN0YXRlXSk7CiAgdmFyIHNldE5hbWVzID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgewogICAgc2V0U3RhdGUoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUsIHsKICAgICAgbmFtZXM6IGlucHV0LmN1cnJlbnQudmFsdWUKICAgIH0pKTsKICB9LCBbc2V0U3RhdGUsIHN0YXRlLCBpbnB1dF0pOwogIHZhciBpbnB1dCA9IHVzZVJlZigpOwogIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7CiAgICBnZW5lcmF0ZSgpOwogIH0sIFtdKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJoMSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgc3RhdGUudGl0bGUpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBzdHlsZTogewogICAgICBkaXNwbGF5OiAnZmxleCcsCiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLAogICAgICBhbGlnbkl0ZW1zOiAnZmxleC1zdGFydCcKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRleHRhcmVhIiwgewogICAgc3R5bGU6IHsKICAgICAgd2lkdGg6ICc5MCUnLAogICAgICBib3JkZXI6ICcxcHggI2VlZSBzb2xpZCcsCiAgICAgIHBhZGRpbmc6IDE2CiAgICB9LAogICAgcmVmOiBpbnB1dCwKICAgIG9uQ2hhbmdlOiBzZXROYW1lcywKICAgIHZhbHVlOiBzdGF0ZS5uYW1lcywKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIHN0eWxlOiB7CiAgICAgIG1hcmdpblJpZ2h0OiAnMTAwJScKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IGdlbmVyYXRlLAogICAgc3R5bGU6IHsKICAgICAgcGFkZGluZzogJzhweCAxNnB4JwogICAgfSwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImdlbmVyYXRlIikpKSk7Cn07CgpfX3NpZ25hdHVyZV9fKF9kZWZhdWx0LCAidXNlU3RhdGV7W3N0YXRlLCBzZXRTdGF0ZV0oeyB0aXRsZTogJycsIG5hbWVzOiAnRmVsaXBlLCBHZW5ldmEsIEhpbWFuc2hpLCBKYW1pZSwgT2xhdm8sIFRoeWFnbywgSm9yZGFuLCBSb2IsIERhbmllbCwgVGVlbmEsIEtlaXRoLCBKZWFuJyB9KX1cbnVzZUNhbGxiYWNre2dlbmVyYXRlfVxudXNlQ2FsbGJhY2t7c2V0TmFtZXN9XG51c2VSZWZ7aW5wdXR9XG51c2VFZmZlY3R7fSIpOwoKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIocmFuZG9tLCAicmFuZG9tIiwgIi9Vc2Vycy9vbGF2by9Qcm9qZWN0cy9zcHJpbnQtbmFtZS1nZW5lcmF0b3Ivc3JjL0dlbmVyYXRvci5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL29sYXZvL1Byb2plY3RzL3NwcmludC1uYW1lLWdlbmVyYXRvci9zcmMvR2VuZXJhdG9yLmpzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/olavo/Projects/sprint-name-generator/src/Generator.jsx"],"names":["React","useEffect","useState","useCallback","useRef","nouns","adjectives","random","arr","Math","floor","length","title","names","state","setState","generate","noun","adjective","name","replace","split","Boolean","setNames","input","current","value","display","flexDirection","alignItems","width","border","padding","marginRight"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD;AAAA,SAASA,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACF,MAAL,KAAcC,GAAG,CAACG,MAA7B,CAAD,CAAZ;AAAA,CAAf;;eAEe,oBAAM;AAAA,kBACOT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CADf;AAAA;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAEnB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,YAAM;AACjC,QAAMc,IAAI,GAAGV,MAAM,CAACF,KAAD,CAAnB;AACA,QAAMa,SAAS,GAAGX,MAAM,CAACD,UAAD,CAAxB;AACA,QAAMa,IAAI,GAAGZ,MAAM,CAACO,KAAK,CAACD,KAAN,CAAYO,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,EAA+BC,KAA/B,CAAqC,GAArC,CAAD,CAAnB;AACAN,IAAAA,QAAQ,mBAAMD,KAAN;AAAaF,MAAAA,KAAK,YAAKU,OAAO,CAACH,IAAD,CAAP,aAAmBA,IAAnB,WAA+B,EAApC,SAAyCD,SAAzC,cAAsDD,IAAtD;AAAlB,OAAR;AACD,GAL2B,EAKzB,CAACH,KAAD,EAAQC,QAAR,CALyB,CAA5B;AAOA,MAAMQ,QAAQ,GAAGpB,WAAW,CAAC,YAAM;AACjCY,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcC;AAAlC,OAAR;AACD,GAF2B,EAEzB,CAACX,QAAD,EAAWD,KAAX,EAAkBU,KAAlB,CAFyB,CAA5B;AAIA,MAAMA,KAAK,GAAGpB,MAAM,EAApB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACF,KAAX,CADF,EAGE;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE;AAAxD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE,gBAAxB;AAA0CC,MAAAA,OAAO,EAAE;AAAnD,KAAjB;AAA0E,IAAA,GAAG,EAAER,KAA/E;AAAsF,IAAA,QAAQ,EAAED,QAAhG;AAA0G,IAAA,KAAK,EAAET,KAAK,CAACD,KAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,WAAW,EAAE;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEjB,QAAjB;AAA2B,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CAHF,CADF;AAYD,C;;;;AA/BD;;;;;;;;;;0BAFMzB,M","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport nouns from './nouns';\nimport adjectives from './adjectives';\n\nconst random = (arr) => arr[Math.floor(Math.random()*arr.length)];\n\nexport default () => {\n  const [state, setState] = useState({ title: '', names: 'Felipe, Geneva, Himanshi, Jamie, Olavo, Thyago, Jordan, Rob, Daniel, Teena, Keith, Jean' });\n  const generate = useCallback(() => {\n    const noun = random(nouns);\n    const adjective = random(adjectives);\n    const name = random(state.names.replace(', ', ',').split(','));\n    setState({ ...state, title: `${Boolean(name) ? `${name}'s ` : ''}${adjective} ${noun}` });\n  }, [state, setState]);\n\n  const setNames = useCallback(() => {\n    setState({ ...state, names: input.current.value });\n  }, [setState, state, input]);\n\n  const input = useRef();\n\n  useEffect(() => {\n    generate();\n  }, [])\n\n  return (\n    <div>\n      <h1>{state.title}</h1>\n\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n        <textarea style={{ width: '90%', border: '1px #eee solid', padding: 16 }} ref={input} onChange={setNames} value={state.names}></textarea>\n        <div style={{ marginRight: '100%' }}>\n          <button onClick={generate} style={{ padding: '8px 16px' }}>generate</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]}]}